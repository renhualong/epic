{"version":3,"file":"static/js/893.f1645816.chunk.js","mappings":"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","sources":["components/Uploader.js","components/Tips.js","pages/Home.js"],"sourcesContent":["import React, { useRef } from 'react'\r\nimport { useStores } from '../stores'\r\nimport { observer, useLocalObservable } from 'mobx-react'\r\nimport { Upload } from 'antd'\r\nimport { Alert } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport { Button, message, Space, Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Result = styled.div`\r\nmargin-top: 30px;\r\nborder: 1px dashed #ccc;\r\npadding: 20px;\r\n`\r\nconst H1 = styled.h1`\r\nmargin: 20px 0;\r\ntext-align: center;\r\n`\r\nconst Image = styled.img`\r\nmax-width:300px;\r\n`\r\n\r\nconst { Dragger } = Upload\r\n\r\n\r\nconst Component = observer(() => {\r\n  const { ImageStore, UserStore } = useStores()\r\n  const ref1 = useRef()\r\n  const ref2 = useRef()\r\n  const store = useLocalObservable(() => ({\r\n    width: null,\r\n    setWidth(width) {\r\n      store.width = ref1.current.value\r\n    },\r\n    setHeight(height) {\r\n      store.height = ref2.current.value\r\n    },\r\n    get widthStr() {\r\n      return store.width ? `/w/${store.width}` : ''\r\n    },\r\n    height: null,\r\n    get heightStr() {\r\n      return store.height ? `/h/${store.height}` : ''\r\n    },\r\n    get FullStr() {\r\n      return ImageStore.serverFile.attributes.url.attributes.url + '?imageView2/0' + store.widthStr + store.heightStr\r\n    }\r\n\r\n  }))\r\n  const bindWidthChange = () => {\r\n    store.setWidth()\r\n  }\r\n  const bindHeightChange = () => {\r\n    store.setHeight()\r\n  }\r\n  const props = {\r\n    showUploadList: false,\r\n    beforeUpload: file => {\r\n      ImageStore.setFile(file)\r\n      ImageStore.setFilename(file.name)\r\n      if (UserStore.currentUser === null) {\r\n        message.warning('请先登录后再上传!!')\r\n        return false\r\n      }\r\n      window.file = file\r\n      if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/ig.test(file.type)) {\r\n        message.error('只能上传svg、png、jpg、jpeg、gif格式的图片')\r\n        return false\r\n      }\r\n      if (file.size > 1024 * 1024) {\r\n        message.error('图片最大1M')\r\n        return false\r\n      }\r\n\r\n      ImageStore.upload()\r\n        .then((serverFile) => {\r\n          console.log('上传成功')\r\n          console.log(serverFile)\r\n        }).catch((e) => {\r\n          console.log('上传失败')\r\n          console.log(e)\r\n        })\r\n      console.log(file)\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <Spin tip=\"上传中\" spinning={ImageStore.isUpLoading}>\r\n        <Dragger {...props}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-text\">点击或者拖拽上传图片</p>\r\n          <p className=\"ant-upload-hint\">\r\n            仅支持.png/.gif/.jpg/.svg格式的图片,图片最大尺寸为1M\r\n          </p>\r\n        </Dragger>\r\n      </Spin>\r\n      <>\r\n        {\r\n          ImageStore.serverFile ?\r\n            <Result>\r\n              <H1>上传结果</H1>\r\n              <dl>\r\n                <dt>\r\n                  线上地址\r\n                </dt>\r\n                <dd>\r\n                  <a target=\"_blank\" href={ImageStore.serverFile.attributes.url.attributes.url}>ImageStore.serverFile.attributes.url.attributes.url</a>\r\n\r\n                </dd>\r\n                <dt>文件名</dt>\r\n                <dd>{ImageStore.filename}</dd>\r\n                <dt>图片预览</dt>\r\n                <dd><Image src={ImageStore.serverFile.attributes.url.attributes.url} /></dd>\r\n                <dt>更多尺寸</dt>\r\n                <dd>\r\n                  <input placeholder=\"最大宽度(可选)\" ref={ref1} onChange={bindWidthChange} />\r\n                  <input placeholder=\"最大高度(可选)\" ref={ref2} onChange={bindHeightChange} />\r\n                </dd>\r\n                <dd>\r\n                  <a target=\"_blank\" href={store.FullStr}>\r\n                    {store.FullStr}\r\n                  </a>\r\n\r\n                </dd>\r\n              </dl>\r\n            </Result>\r\n\r\n            : null\r\n\r\n        }\r\n      </>\r\n    </>\r\n  )\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Component","import React from \"react\";\r\nimport styled from 'styled-components'\r\nimport { useStores } from '../stores'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst Tips = styled.div`\r\nbackground: Orange;\r\npadding: 10px;\r\nmargin: 30px 0;\r\ncolor: #fff;\r\nborder-radius: 4px;\r\n\r\n`\r\nconst Component = observer(() => {\r\n  const { UserStore } = useStores()\r\n\r\n  return (\r\n\r\n    <>\r\n      <Tips>请先登录后再上传!!!</Tips>\r\n    </>\r\n\r\n  )\r\n})\r\nexport default Component","import { observable } from 'mobx'\r\nimport { useEffect, useState } from 'react'\r\nimport { useStores } from '../stores/index'\r\nimport { observer } from 'mobx-react'\r\nimport Uploader from '../components/Uploader'\r\nimport Tips from '../components/Tips'\r\n\r\n\r\n\r\nconst Component = observer(() => {\r\n  const { UserStore } = useStores()\r\n  const [a, setA] = useState(0)\r\n  useEffect(() => {\r\n    console.log('进入组件2')\r\n\r\n    return () => {\r\n      console.log('卸载2')\r\n      // HistoryStore.reset()\r\n    }\r\n  }, [a])\r\n  return (\r\n    <>\r\n\r\n      <>\r\n        {\r\n          UserStore.currentUser ?\r\n            null : <Tips />\r\n        }\r\n      </>\r\n      <Uploader />\r\n\r\n    </>\r\n  )\r\n\r\n})\r\nexport default Component"],"names":["Result","styled","H1","Image","Dragger","Upload","observer","useStores","ImageStore","UserStore","ref1","useRef","ref2","store","useLocalObservable","width","setWidth","current","value","setHeight","height","widthStr","heightStr","FullStr","serverFile","attributes","url","props","showUploadList","beforeUpload","file","setFile","setFilename","name","currentUser","message","window","test","type","size","upload","then","console","log","catch","e","tip","spinning","isUpLoading","className","InboxOutlined","target","href","filename","src","placeholder","ref","onChange","Tips","useState","a","useEffect","Uploader"],"sourceRoot":""}