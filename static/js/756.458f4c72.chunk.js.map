{"version":3,"file":"static/js/756.458f4c72.chunk.js","mappings":"sMAMMA,EAASC,EAAAA,GAAAA,IAAH,qJAQNC,EAAQD,EAAAA,GAAAA,GAAH,mEA4HX,UAvHkB,WAChB,IAAME,GAAUC,EAAAA,EAAAA,MACRC,GAAcC,EAAAA,EAAAA,KAAdD,UA6BR,OACE,UAACL,EAAD,YACE,SAACE,EAAD,4BAGA,UAAC,IAAD,CACEK,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,cAAe,CACbC,UAAU,GAEZC,SA5CW,SAACC,GAChBT,EAAUU,YAAYD,EAAOE,UAC7BX,EAAUY,YAAYH,EAAOI,UAC7Bb,EAAUc,WACPC,MAAK,WACJjB,EAAQkB,KAAK,KACbC,QAAQC,IAAI,+DAEb,IAAEC,OAAM,WACPF,QAAQC,IAAI,2BACb,GACJ,EAkCKE,eAhCiB,SAACC,GACtBJ,QAAQC,IAAI,UAAWG,EACxB,EA+BKC,aAAa,MAbf,WAeE,SAAC,SAAD,CACEC,MAAM,qBACNrB,KAAK,WACLsB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0DAEX,CACEC,UAzCc,SAACC,EAAMC,GAC/B,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,0DACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,4CAC1DD,QAAQG,SAChB,IA4BK,UAaE,SAAC,IAAD,OAGF,SAAC,SAAD,CACEX,MAAM,eACNrB,KAAK,WACLsB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,+CAEX,CACES,IAAK,EACLT,QAAS,oCAEX,CACEU,IAAK,GACLV,QAAS,sCAdf,UAkBE,SAAC,aAAD,OAIF,SAAC,SAAD,CACEH,MAAM,2BACNrB,KAAK,kBACLsB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,8CAvEI,SAAC,GAAD,IAAGW,EAAH,EAAGA,cAAH,MAAwB,CAC/CV,UAD+C,SACrCC,EAAMC,GACd,OAAIQ,EAAc,cAAgBR,EAAcE,QAAQG,UACjDH,QAAQC,OAAO,+DACvB,EAJsB,GAiEnB,UAWE,SAAC,aAAD,OAIF,SAAC,SAAD,CACE3B,WAAY,CACViC,OAAQ,EACRlC,KAAM,IAHV,UAME,SAAC,IAAD,CAAQmC,KAAK,UAAUC,SAAS,SAAhC,iCAOT,C","sources":["pages/Register.js"],"sourcesContent":["import { Button, Checkbox, Form, Input } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components'\r\nimport { useStores } from '../stores/index';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Wraper = styled.div`\r\nmax-width: 800px;\r\nmargin: 30px auto;\r\nbox-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.2);\r\nborder-radius: 4px;\r\npadding: 20px;\r\n\r\n`\r\nconst Title = styled.h1`\r\ntext-align: center;\r\nmargin-bottom: 30px;\r\n`\r\n\r\nconst Component = () => {\r\n  const history = useHistory()\r\n  const { AuthStore } = useStores()\r\n  const onFinish = (values) => {\r\n    AuthStore.setUsername(values.username)\r\n    AuthStore.setPassword(values.password)\r\n    AuthStore.register()\r\n      .then(() => {\r\n        history.push('/')\r\n        console.log('注册成功，跳转到首页')\r\n\r\n      }).catch(() => {\r\n        console.log('注册失败')\r\n      })\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  const validatorUserName = (rule, value) => {\r\n    if (/\\W/.test(value)) return Promise.reject('只能字母数字下划线')\r\n    if (value.length < 4 || value.length > 10) return Promise.reject('长度为4~10个字符')\r\n    return Promise.resolve();\r\n  }\r\n  const validatorConfirm = ({ getFieldValue }) => ({\r\n    validator(rule, value) {\r\n      if (getFieldValue('password') === value) return Promise.resolve();\r\n      return Promise.reject('两次输入的密码不一致')\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Wraper>\r\n      <Title>\r\n        注册\r\n      </Title>\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 20,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"用户名\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入您的用户名！',\r\n            },\r\n            {\r\n              validator: validatorUserName\r\n            }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"密码\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入您的密码!',\r\n            },\r\n            {\r\n              min: 4,\r\n              message: '最少4个字符!'\r\n            },\r\n            {\r\n              max: 10,\r\n              message: '最大10个字符!'\r\n            }\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n\r\n        <Form.Item\r\n          label=\"确认密码\"\r\n          name=\"confirmPassword\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请确认您的密码',\r\n            },\r\n            validatorConfirm\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 4,\r\n            span: 20,\r\n          }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Wraper>\r\n  );\r\n};\r\n\r\nexport default Component;"],"names":["Wraper","styled","Title","history","useHistory","AuthStore","useStores","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","setUsername","username","setPassword","password","register","then","push","console","log","catch","onFinishFailed","errorInfo","autoComplete","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","getFieldValue","offset","type","htmlType"],"sourceRoot":""}